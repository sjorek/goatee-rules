{"version":3,"sources":["Unordered/PropertyMap.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;AAAA;AAAA,MAAA,8BAAA;IAAA;;;EAgBA,OAAA,GAAY,OAAA,CAAQ,WAAR;;EAGV,WACU,OAAA,CAAQ,YAAR,EADV;;;AAGF;;;;;;;;;;AASA;;;;;;EAKM;;;;;;;;AAEJ;;;;;;;0BAMA,YAAA,GAAc,SAAC,MAAD;aACZ,QAAA,CAAS,8CAAM,MAAN,CAAT;IADY;;;;KARU;;EAW1B,MAAM,CAAC,OAAP,GAAiB;AA/CjB","file":"Unordered/PropertyMap.js","sourceRoot":"/source/","sourcesContent":["###\n© Copyright 2013-2016 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\nRuleMap   = require './RuleMap'\n\n{\n  camelize\n}         = require '../Utility'\n\n###\n# # PropertyMaps …\n# -----------------\n#\n# … look like “propertyId: expression; anotherProp: value”. They\n# provide a implementation of unordered `RuleMap`s having its keys\n# normalized to camel-case.\n###\n\n###*\n# -------------\n# @class PropertyMap\n# @namespace GoateeRules.Unordered\n###\nclass PropertyMap extends RuleMap\n\n  ###*\n  # -------------\n  # @method normalizeKey\n  # @param  {String} string\n  # @return {String}\n  ###\n  normalizeKey: (string) ->\n    camelize super(string)\n\nmodule.exports = PropertyMap\n"]}