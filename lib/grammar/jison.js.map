{"version":3,"sources":["jison.coffee"],"names":[],"mappings":"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","file":"jison.js","sourcesContent":["### ^\nBSD 3-Clause License\n\nCopyright (c) 2017, Stephan Jorek\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n###\n###\n# # Grammar …\n# -----------\n#\n# … this time it's jison.coffee !\n###\nmodule.exports = (yy, notator) ->\n\n  ### Use the script's jison-grammar ###\n  grammar = (require 'goatee-script.js/lib/grammar/jison')(yy, notator)\n\n  r = notator.resolve\n  o = notator.operation\n  c = notator.conditional\n\n  ### Actually this is not needed, but it looks nicer ;-) ###\n  $1 = $2 = $3 = $4 = $5 = $6 = $7 = $8 = null\n\n  ###*\n  # -------------\n  # Use the default jison-lexer\n  # @type {Object}\n  # @property lex\n  # @static\n  ###\n  grammar.lex = do ->\n\n    ### Declare all rule-related lexer tokens … ###\n    rules = [\n      r ///\n        (\n          [_a-zA-Z]     |\n          [-_][_a-zA-Z]\n        )\n        (\n          -?\\w\n        )*\n      ///                            , -> 'KEY'\n      c ['rule'], /\\s\\!important\\b/  , -> 'NONIMPORTANT'\n      r ':'                          , -> @begin 'rule' ; ':'\n\n    ].concat grammar.lex.rules.map (v, k) ->\n      ### … and inherit the other lexer tokens from ScriptGrammar ###\n      switch v[1]\n        # '\\s+', '/* … */'\n        when 'return;'\n          [['*']].concat v\n        # ';', 'EOF'\n        when 'return \\';\\';', 'return \\'EOF\\';'\n          v[1] = 'this.popState();' + v[1]\n          [['*']].concat v\n        else [['rule']].concat v\n\n    {\n      startConditions :\n        ### “rule” is implicit (1), not explicit (0) ###\n        rule          : 1\n      rules           : rules\n    }\n\n  ###*\n  # -------------\n  # The **Rules** is the top-level node in the syntax tree.\n  # @type {String}\n  # @property startSymbol\n  # @static\n  ###\n  grammar.startSymbol = 'Rules'\n\n  ###\n  # # Syntax description …\n  # ----------------------\n  #\n  # To build a grammar, a syntax is needed …\n  #\n  ###\n\n  ###*\n  # -------------\n  # … which is inherited and notated here in Backus-Naur-Format.\n  # @type {Object}\n  # @property bnf\n  # @static\n  ###\n  grammar.bnf = do ->\n\n    bnf =\n\n      ###\n      Since we parse bottom-up, all parsing must end here.\n      ###\n      Rules: [\n        # TODO use a precompiled “undefined” expression in Rules » End\n        r 'End'                      , -> yy.goatee.create 'scalar', [undefined]\n        r 'RuleMap End'              , -> $1\n        r 'Seperator RuleMap End'    , -> $2\n      ]\n      RuleMap: [\n        o 'Map'                      , -> yy.goatee.create 'rules', $1\n        o 'RuleMap Seperator Map'    , -> yy.goatee.addRule $1, $3\n      ]\n      Map: [\n        o 'KEY : Rule'               , -> [$1].concat $3\n      ]\n      Rule: [\n        o 'List'                     , -> [$1, off]\n        o 'List NONIMPORTANT'        , -> [$1, on]\n      ]\n\n    ###\n    Inherit all but “Script” and “Statements” operations from script-grammar\n    ###\n    for own k,v of grammar.bnf when k isnt 'Script' and k isnt 'Statements'\n      if k isnt 'Operation'\n        bnf[k] = v\n        continue\n\n      ###\n      Tweak “Operation” to include a hack to support “!important” as statement\n      expression without interfering the final “!important” declaration\n      ###\n      ops = []\n      for rule in v\n        if rule[0] is '! Expression'\n          ops.push o 'NONIMPORTANT', ->\n            yy.goatee.create '!' , [\n              yy.goatee.create 'reference', ['important']\n            ]\n        ops.push rule\n\n      bnf[k] = ops\n\n    bnf\n\n  grammar\n"]}