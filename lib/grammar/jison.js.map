{"version":3,"sources":["jison.coffee"],"names":[],"mappings":"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","file":"jison.js","sourceRoot":"/source/","sourcesContent":["###\n© Copyright 2013-2016 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\n###\n# # Grammar …\n# -----------\n#\n# … this time it's jison.coffee !\n###\nmodule.exports = (yy, notator) ->\n\n  # Use the default jison-lexer\n  grammar = (require 'goatee-script.js/lib/grammar/jison')(yy, notator)\n\n  r = notator.resolve\n  o = notator.operation\n  c = notator.conditional\n\n  ### Actually this is not needed, but it looks nicer ;-) ###\n  $1 = $2 = $3 = $4 = $5 = $6 = $7 = $8 = null\n\n  # Update the default jison-lexer\n  grammar.lex = do ->\n\n    # Declare all lexer tokens\n    rules = [\n      r ///\n        (\n          [_a-zA-Z]     |\n          [-_][_a-zA-Z]\n        )\n        (\n          -?\\w\n        )*\n      ///                            , -> 'KEY'\n      c ['rule'], /\\s\\!important\\b/  , -> 'NONIMPORTANT'\n      r ':'                          , -> @begin 'rule' ; ':'\n\n    # Inherit lexer tokens from ScriptGrammar\n    ].concat grammar.lex.rules.map (v, k) ->\n      switch v[1]\n        # '\\s+', '/* … */'\n        when 'return;'\n          [['*']].concat v\n        # ';', 'EOF'\n        when 'return \\';\\';', 'return \\'EOF\\';'\n          v[1] = 'this.popState();' + v[1]\n          [['*']].concat v\n        else [['rule']].concat v\n\n    {\n      startConditions :\n        # “rule” is implicit (1), not explicit (0)\n        rule          : 1\n      rules           : rules\n    }\n\n  # The **Rules** is the top-level node in the syntax tree.\n  grammar.startSymbol = 'Rules'\n\n  ##\n  # The syntax description notated in Backus-Naur-Format\n  # ----------------------------------------------------\n  grammar.bnf = do ->\n\n    bnf =\n\n      # Since we parse bottom-up, all parsing must end here.\n      Rules: [\n        r 'End'                      , -> yy.goatee.create 'scalar', [undefined]\n        r 'RuleMap End'              , -> $1\n        r 'Seperator RuleMap End'    , -> $2\n      ]\n      RuleMap: [\n        o 'Map'                      , -> yy.goatee.create 'rules', $1\n        o 'RuleMap Seperator Map'    , -> yy.goatee.addRule $1, $3\n      ]\n      Map: [\n        o 'KEY : Rule'               , -> [$1].concat $3\n      ]\n      Rule: [\n        o 'List'                     , -> [$1, off]\n        o 'List NONIMPORTANT'        , -> [$1, on]\n      ]\n\n    # Inherit all but “Script” and “Statements” operations from script-grammar\n    for own k,v of grammar.bnf when k isnt 'Script' and k isnt 'Statements'\n      if k isnt 'Operation'\n        bnf[k] = v\n        continue\n\n      # Tweak “Operation” to include a hack to support “!important” as statement\n      # expression without interfering the final “!important” declaration\n      ops = []\n      for rule in v\n        if rule[0] is '! Expression'\n          ops.push o 'NONIMPORTANT', ->\n            yy.goatee.create '!' , [\n              yy.goatee.create 'reference', ['important']\n            ]\n        ops.push rule\n\n      bnf[k] = ops\n\n    bnf\n\n  grammar\n"]}